// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dataTypespb/dataTypes.proto
// Protobuf C++ Version: 5.26.1

#include "dataTypespb/dataTypes.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace dataTypespb {

inline constexpr TransientNonce::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : nonce_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TransientNonce::TransientNonce(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TransientNonceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransientNonceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransientNonceDefaultTypeInternal() {}
  union {
    TransientNonce _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransientNonceDefaultTypeInternal _TransientNonce_default_instance_;

inline constexpr ReceiptHeader::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : loghashes_{},
        contractaddress_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        gasused_{::uint64_t{0u}},
        status_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ReceiptHeader::ReceiptHeader(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ReceiptHeaderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReceiptHeaderDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReceiptHeaderDefaultTypeInternal() {}
  union {
    ReceiptHeader _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReceiptHeaderDefaultTypeInternal _ReceiptHeader_default_instance_;

inline constexpr Penny::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : amount_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sender_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        destination_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        originchain_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        destinationchain_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sendertransactionid_{::uint64_t{0u}},
        timestamp_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Penny::Penny(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PennyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PennyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PennyDefaultTypeInternal() {}
  union {
    Penny _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PennyDefaultTypeInternal _Penny_default_instance_;

inline constexpr LogEntry::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : topics_{},
        data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LogEntry::LogEntry(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LogEntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LogEntryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LogEntryDefaultTypeInternal() {}
  union {
    LogEntry _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LogEntryDefaultTypeInternal _LogEntry_default_instance_;

inline constexpr Log::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : topics_{},
        address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        transactionid_{::uint64_t{0u}},
        index_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Log::Log(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LogDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LogDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LogDefaultTypeInternal() {}
  union {
    Log _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LogDefaultTypeInternal _Log_default_instance_;

inline constexpr BlockHeader::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : loghashes_{},
        pennyhash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        receipthash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        balance_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_{::uint64_t{0u}},
        epochid_{::uint64_t{0u}},
        timestamp_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BlockHeader::BlockHeader(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BlockHeaderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlockHeaderDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlockHeaderDefaultTypeInternal() {}
  union {
    BlockHeader _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlockHeaderDefaultTypeInternal _BlockHeader_default_instance_;

inline constexpr Account::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : nonce_{::uint64_t{0u}},
        state_{static_cast< ::dataTypespb::Account_State >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Account::Account(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AccountDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AccountDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AccountDefaultTypeInternal() {}
  union {
    Account _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AccountDefaultTypeInternal _Account_default_instance_;

inline constexpr Receipt::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : logs_{},
        contractaddress_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        gasused_{::uint64_t{0u}},
        status_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Receipt::Receipt(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ReceiptDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReceiptDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReceiptDefaultTypeInternal() {}
  union {
    Receipt _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReceiptDefaultTypeInternal _Receipt_default_instance_;

inline constexpr PennyWithSenderHash::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        senderblockhash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        penny_{nullptr},
        senderepochid_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR PennyWithSenderHash::PennyWithSenderHash(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PennyWithSenderHashDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PennyWithSenderHashDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PennyWithSenderHashDefaultTypeInternal() {}
  union {
    PennyWithSenderHash _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PennyWithSenderHashDefaultTypeInternal _PennyWithSenderHash_default_instance_;

inline constexpr Logs::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : list_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Logs::Logs(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LogsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LogsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LogsDefaultTypeInternal() {}
  union {
    Logs _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LogsDefaultTypeInternal _Logs_default_instance_;

inline constexpr Receipts::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : list_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Receipts::Receipts(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ReceiptsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReceiptsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReceiptsDefaultTypeInternal() {}
  union {
    Receipts _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReceiptsDefaultTypeInternal _Receipts_default_instance_;

inline constexpr Block::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        logs_{},
        balance_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        penny_{nullptr},
        receipt_{nullptr},
        id_{::uint64_t{0u}},
        epochid_{::uint64_t{0u}},
        timestamp_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR Block::Block(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BlockDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlockDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlockDefaultTypeInternal() {}
  union {
    Block _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlockDefaultTypeInternal _Block_default_instance_;

inline constexpr Blocks::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : list_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Blocks::Blocks(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BlocksDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlocksDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlocksDefaultTypeInternal() {}
  union {
    Blocks _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlocksDefaultTypeInternal _Blocks_default_instance_;
}  // namespace dataTypespb
static ::_pb::Metadata file_level_metadata_dataTypespb_2fdataTypes_2eproto[13];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_dataTypespb_2fdataTypes_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_dataTypespb_2fdataTypes_2eproto = nullptr;
const ::uint32_t
    TableStruct_dataTypespb_2fdataTypes_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::dataTypespb::Account, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::dataTypespb::Account, _impl_.nonce_),
        PROTOBUF_FIELD_OFFSET(::dataTypespb::Account, _impl_.state_),
        PROTOBUF_FIELD_OFFSET(::dataTypespb::Block, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::dataTypespb::Block, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::dataTypespb::Block, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::dataTypespb::Block, _impl_.epochid_),
        PROTOBUF_FIELD_OFFSET(::dataTypespb::Block, _impl_.penny_),
        PROTOBUF_FIELD_OFFSET(::dataTypespb::Block, _impl_.receipt_),
        PROTOBUF_FIELD_OFFSET(::dataTypespb::Block, _impl_.logs_),
        PROTOBUF_FIELD_OFFSET(::dataTypespb::Block, _impl_.balance_),
        PROTOBUF_FIELD_OFFSET(::dataTypespb::Block, _impl_.hash_),
        PROTOBUF_FIELD_OFFSET(::dataTypespb::Block, _impl_.timestamp_),
        ~0u,
        ~0u,
        0,
        1,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::dataTypespb::Blocks, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::dataTypespb::Blocks, _impl_.list_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::dataTypespb::BlockHeader, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::dataTypespb::BlockHeader, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::dataTypespb::BlockHeader, _impl_.epochid_),
        PROTOBUF_FIELD_OFFSET(::dataTypespb::BlockHeader, _impl_.pennyhash_),
        PROTOBUF_FIELD_OFFSET(::dataTypespb::BlockHeader, _impl_.receipthash_),
        PROTOBUF_FIELD_OFFSET(::dataTypespb::BlockHeader, _impl_.loghashes_),
        PROTOBUF_FIELD_OFFSET(::dataTypespb::BlockHeader, _impl_.balance_),
        PROTOBUF_FIELD_OFFSET(::dataTypespb::BlockHeader, _impl_.hash_),
        PROTOBUF_FIELD_OFFSET(::dataTypespb::BlockHeader, _impl_.timestamp_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::dataTypespb::Penny, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::dataTypespb::Penny, _impl_.sendertransactionid_),
        PROTOBUF_FIELD_OFFSET(::dataTypespb::Penny, _impl_.amount_),
        PROTOBUF_FIELD_OFFSET(::dataTypespb::Penny, _impl_.sender_),
        PROTOBUF_FIELD_OFFSET(::dataTypespb::Penny, _impl_.destination_),
        PROTOBUF_FIELD_OFFSET(::dataTypespb::Penny, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::dataTypespb::Penny, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::dataTypespb::Penny, _impl_.originchain_),
        PROTOBUF_FIELD_OFFSET(::dataTypespb::Penny, _impl_.destinationchain_),
        PROTOBUF_FIELD_OFFSET(::dataTypespb::PennyWithSenderHash, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::dataTypespb::PennyWithSenderHash, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::dataTypespb::PennyWithSenderHash, _impl_.penny_),
        PROTOBUF_FIELD_OFFSET(::dataTypespb::PennyWithSenderHash, _impl_.senderblockhash_),
        PROTOBUF_FIELD_OFFSET(::dataTypespb::PennyWithSenderHash, _impl_.senderepochid_),
        0,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::dataTypespb::Log, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::dataTypespb::Log, _impl_.address_),
        PROTOBUF_FIELD_OFFSET(::dataTypespb::Log, _impl_.transactionid_),
        PROTOBUF_FIELD_OFFSET(::dataTypespb::Log, _impl_.index_),
        PROTOBUF_FIELD_OFFSET(::dataTypespb::Log, _impl_.topics_),
        PROTOBUF_FIELD_OFFSET(::dataTypespb::Log, _impl_.data_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::dataTypespb::LogEntry, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::dataTypespb::LogEntry, _impl_.topics_),
        PROTOBUF_FIELD_OFFSET(::dataTypespb::LogEntry, _impl_.data_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::dataTypespb::Logs, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::dataTypespb::Logs, _impl_.list_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::dataTypespb::Receipt, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::dataTypespb::Receipt, _impl_.contractaddress_),
        PROTOBUF_FIELD_OFFSET(::dataTypespb::Receipt, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::dataTypespb::Receipt, _impl_.gasused_),
        PROTOBUF_FIELD_OFFSET(::dataTypespb::Receipt, _impl_.logs_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::dataTypespb::Receipts, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::dataTypespb::Receipts, _impl_.list_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::dataTypespb::ReceiptHeader, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::dataTypespb::ReceiptHeader, _impl_.contractaddress_),
        PROTOBUF_FIELD_OFFSET(::dataTypespb::ReceiptHeader, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::dataTypespb::ReceiptHeader, _impl_.gasused_),
        PROTOBUF_FIELD_OFFSET(::dataTypespb::ReceiptHeader, _impl_.loghashes_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::dataTypespb::TransientNonce, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::dataTypespb::TransientNonce, _impl_.nonce_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::dataTypespb::Account)},
        {10, 26, -1, sizeof(::dataTypespb::Block)},
        {34, -1, -1, sizeof(::dataTypespb::Blocks)},
        {43, -1, -1, sizeof(::dataTypespb::BlockHeader)},
        {59, -1, -1, sizeof(::dataTypespb::Penny)},
        {75, 86, -1, sizeof(::dataTypespb::PennyWithSenderHash)},
        {89, -1, -1, sizeof(::dataTypespb::Log)},
        {102, -1, -1, sizeof(::dataTypespb::LogEntry)},
        {112, -1, -1, sizeof(::dataTypespb::Logs)},
        {121, -1, -1, sizeof(::dataTypespb::Receipt)},
        {133, -1, -1, sizeof(::dataTypespb::Receipts)},
        {142, -1, -1, sizeof(::dataTypespb::ReceiptHeader)},
        {154, -1, -1, sizeof(::dataTypespb::TransientNonce)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::dataTypespb::_Account_default_instance_._instance,
    &::dataTypespb::_Block_default_instance_._instance,
    &::dataTypespb::_Blocks_default_instance_._instance,
    &::dataTypespb::_BlockHeader_default_instance_._instance,
    &::dataTypespb::_Penny_default_instance_._instance,
    &::dataTypespb::_PennyWithSenderHash_default_instance_._instance,
    &::dataTypespb::_Log_default_instance_._instance,
    &::dataTypespb::_LogEntry_default_instance_._instance,
    &::dataTypespb::_Logs_default_instance_._instance,
    &::dataTypespb::_Receipt_default_instance_._instance,
    &::dataTypespb::_Receipts_default_instance_._instance,
    &::dataTypespb::_ReceiptHeader_default_instance_._instance,
    &::dataTypespb::_TransientNonce_default_instance_._instance,
};
const char descriptor_table_protodef_dataTypespb_2fdataTypes_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\033dataTypespb/dataTypes.proto\022\013dataTypes"
    "pb\"\206\001\n\007Account\022\r\n\005nonce\030\001 \001(\004\022)\n\005state\030\002"
    " \001(\0162\032.dataTypespb.Account.State\"A\n\005Stat"
    "e\022\r\n\tFINALIZED\020\000\022\r\n\tPRECOMMIT\020\001\022\014\n\010PREAB"
    "ORT\020\002\022\014\n\010CONFLICT\020\003\"\300\001\n\005Block\022\n\n\002id\030\001 \001("
    "\004\022\017\n\007epochId\030\002 \001(\004\022!\n\005penny\030\003 \001(\0132\022.data"
    "Typespb.Penny\022%\n\007receipt\030\004 \001(\0132\024.dataTyp"
    "espb.Receipt\022\036\n\004logs\030\005 \003(\0132\020.dataTypespb"
    ".Log\022\017\n\007balance\030\006 \001(\014\022\014\n\004hash\030\007 \001(\014\022\021\n\tt"
    "imeStamp\030\010 \001(\004\"*\n\006Blocks\022 \n\004list\030\001 \003(\0132\022"
    ".dataTypespb.Block\"\227\001\n\013BlockHeader\022\n\n\002id"
    "\030\001 \001(\004\022\017\n\007epochId\030\002 \001(\004\022\021\n\tpennyHash\030\003 \001"
    "(\014\022\023\n\013receiptHash\030\004 \001(\014\022\021\n\tlogHashes\030\005 \003"
    "(\014\022\017\n\007balance\030\006 \001(\014\022\014\n\004hash\030\007 \001(\014\022\021\n\ttim"
    "estamp\030\010 \001(\004\"\251\001\n\005Penny\022\033\n\023senderTransact"
    "ionId\030\001 \001(\004\022\016\n\006amount\030\003 \001(\014\022\016\n\006sender\030\004 "
    "\001(\014\022\023\n\013destination\030\005 \001(\014\022\014\n\004data\030\006 \001(\014\022\021"
    "\n\ttimestamp\030\007 \001(\004\022\023\n\013originChain\030\010 \001(\014\022\030"
    "\n\020destinationChain\030\t \001(\014\"h\n\023PennyWithSen"
    "derHash\022!\n\005penny\030\001 \001(\0132\022.dataTypespb.Pen"
    "ny\022\027\n\017senderBlockHash\030\002 \001(\014\022\025\n\rsenderEpo"
    "chId\030\003 \001(\004\"Z\n\003Log\022\017\n\007address\030\001 \001(\014\022\025\n\rtr"
    "ansactionId\030\002 \001(\004\022\r\n\005index\030\003 \001(\r\022\016\n\006topi"
    "cs\030\004 \003(\014\022\014\n\004data\030\005 \001(\014\"(\n\010LogEntry\022\016\n\006to"
    "pics\030\001 \003(\014\022\014\n\004data\030\002 \001(\014\"&\n\004Logs\022\036\n\004list"
    "\030\001 \003(\0132\020.dataTypespb.Log\"c\n\007Receipt\022\027\n\017c"
    "ontractAddress\030\001 \001(\014\022\016\n\006status\030\002 \001(\010\022\017\n\007"
    "gasUsed\030\003 \001(\004\022\036\n\004logs\030\004 \003(\0132\020.dataTypesp"
    "b.Log\".\n\010Receipts\022\"\n\004list\030\001 \003(\0132\024.dataTy"
    "pespb.Receipt\"\\\n\rReceiptHeader\022\027\n\017contra"
    "ctAddress\030\001 \001(\014\022\016\n\006status\030\002 \001(\010\022\017\n\007gasUs"
    "ed\030\003 \001(\004\022\021\n\tlogHashes\030\004 \003(\014\"\037\n\016Transient"
    "Nonce\022\r\n\005nonce\030\001 \001(\004b\006proto3"
};
static ::absl::once_flag descriptor_table_dataTypespb_2fdataTypes_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_dataTypespb_2fdataTypes_2eproto = {
    false,
    false,
    1308,
    descriptor_table_protodef_dataTypespb_2fdataTypes_2eproto,
    "dataTypespb/dataTypes.proto",
    &descriptor_table_dataTypespb_2fdataTypes_2eproto_once,
    nullptr,
    0,
    13,
    schemas,
    file_default_instances,
    TableStruct_dataTypespb_2fdataTypes_2eproto::offsets,
    file_level_metadata_dataTypespb_2fdataTypes_2eproto,
    file_level_enum_descriptors_dataTypespb_2fdataTypes_2eproto,
    file_level_service_descriptors_dataTypespb_2fdataTypes_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_dataTypespb_2fdataTypes_2eproto_getter() {
  return &descriptor_table_dataTypespb_2fdataTypes_2eproto;
}
namespace dataTypespb {
const ::google::protobuf::EnumDescriptor* Account_State_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_dataTypespb_2fdataTypes_2eproto);
  return file_level_enum_descriptors_dataTypespb_2fdataTypes_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t Account_State_internal_data_[] = {
    262144u, 0u, };
bool Account_State_IsValid(int value) {
  return 0 <= value && value <= 3;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Account_State Account::FINALIZED;
constexpr Account_State Account::PRECOMMIT;
constexpr Account_State Account::PREABORT;
constexpr Account_State Account::CONFLICT;
constexpr Account_State Account::State_MIN;
constexpr Account_State Account::State_MAX;
constexpr int Account::State_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class Account::_Internal {
 public:
};

Account::Account(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dataTypespb.Account)
}
Account::Account(
    ::google::protobuf::Arena* arena, const Account& from)
    : Account(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Account::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Account::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, nonce_),
           0,
           offsetof(Impl_, state_) -
               offsetof(Impl_, nonce_) +
               sizeof(Impl_::state_));
}
Account::~Account() {
  // @@protoc_insertion_point(destructor:dataTypespb.Account)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Account::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Account::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Account, _impl_._cached_size_),
              false,
          },
          &Account::MergeImpl,
          &Account::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void Account::Clear() {
// @@protoc_insertion_point(message_clear_start:dataTypespb.Account)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.nonce_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.state_) -
      reinterpret_cast<char*>(&_impl_.nonce_)) + sizeof(_impl_.state_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Account::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Account::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Account_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dataTypespb::Account>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .dataTypespb.Account.State state = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Account, _impl_.state_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Account, _impl_.state_)}},
    // uint64 nonce = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Account, _impl_.nonce_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Account, _impl_.nonce_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 nonce = 1;
    {PROTOBUF_FIELD_OFFSET(Account, _impl_.nonce_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .dataTypespb.Account.State state = 2;
    {PROTOBUF_FIELD_OFFSET(Account, _impl_.state_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Account::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dataTypespb.Account)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 nonce = 1;
  if (this->_internal_nonce() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_nonce(), target);
  }

  // .dataTypespb.Account.State state = 2;
  if (this->_internal_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_state(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dataTypespb.Account)
  return target;
}

::size_t Account::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dataTypespb.Account)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 nonce = 1;
  if (this->_internal_nonce() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_nonce());
  }

  // .dataTypespb.Account.State state = 2;
  if (this->_internal_state() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_state());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Account::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Account*>(&to_msg);
  auto& from = static_cast<const Account&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dataTypespb.Account)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_nonce() != 0) {
    _this->_impl_.nonce_ = from._impl_.nonce_;
  }
  if (from._internal_state() != 0) {
    _this->_impl_.state_ = from._impl_.state_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Account::CopyFrom(const Account& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dataTypespb.Account)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Account::IsInitialized() const {
  return true;
}

void Account::InternalSwap(Account* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Account, _impl_.state_)
      + sizeof(Account::_impl_.state_)
      - PROTOBUF_FIELD_OFFSET(Account, _impl_.nonce_)>(
          reinterpret_cast<char*>(&_impl_.nonce_),
          reinterpret_cast<char*>(&other->_impl_.nonce_));
}

::google::protobuf::Metadata Account::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_dataTypespb_2fdataTypes_2eproto_getter,
                                   &descriptor_table_dataTypespb_2fdataTypes_2eproto_once,
                                   file_level_metadata_dataTypespb_2fdataTypes_2eproto[0]);
}
// ===================================================================

class Block::_Internal {
 public:
  using HasBits = decltype(std::declval<Block>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Block, _impl_._has_bits_);
};

Block::Block(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dataTypespb.Block)
}
inline PROTOBUF_NDEBUG_INLINE Block::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        logs_{visibility, arena, from.logs_},
        balance_(arena, from.balance_),
        hash_(arena, from.hash_) {}

Block::Block(
    ::google::protobuf::Arena* arena,
    const Block& from)
    : ::google::protobuf::Message(arena) {
  Block* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.penny_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::dataTypespb::Penny>(
                              arena, *from._impl_.penny_)
                        : nullptr;
  _impl_.receipt_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::dataTypespb::Receipt>(
                              arena, *from._impl_.receipt_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, timestamp_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::timestamp_));

  // @@protoc_insertion_point(copy_constructor:dataTypespb.Block)
}
inline PROTOBUF_NDEBUG_INLINE Block::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        logs_{visibility, arena},
        balance_(arena),
        hash_(arena) {}

inline void Block::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, penny_),
           0,
           offsetof(Impl_, timestamp_) -
               offsetof(Impl_, penny_) +
               sizeof(Impl_::timestamp_));
}
Block::~Block() {
  // @@protoc_insertion_point(destructor:dataTypespb.Block)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Block::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.balance_.Destroy();
  _impl_.hash_.Destroy();
  delete _impl_.penny_;
  delete _impl_.receipt_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Block::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Block, _impl_._cached_size_),
              false,
          },
          &Block::MergeImpl,
          &Block::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void Block::Clear() {
// @@protoc_insertion_point(message_clear_start:dataTypespb.Block)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.logs_.Clear();
  _impl_.balance_.ClearToEmpty();
  _impl_.hash_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.penny_ != nullptr);
      _impl_.penny_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.receipt_ != nullptr);
      _impl_.receipt_->Clear();
    }
  }
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.timestamp_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.timestamp_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Block::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 3, 0, 2> Block::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Block, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Block_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dataTypespb::Block>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 timeStamp = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Block, _impl_.timestamp_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(Block, _impl_.timestamp_)}},
    // uint64 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Block, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Block, _impl_.id_)}},
    // uint64 epochId = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Block, _impl_.epochid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Block, _impl_.epochid_)}},
    // .dataTypespb.Penny penny = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(Block, _impl_.penny_)}},
    // .dataTypespb.Receipt receipt = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(Block, _impl_.receipt_)}},
    // repeated .dataTypespb.Log logs = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 2, PROTOBUF_FIELD_OFFSET(Block, _impl_.logs_)}},
    // bytes balance = 6;
    {::_pbi::TcParser::FastBS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Block, _impl_.balance_)}},
    // bytes hash = 7;
    {::_pbi::TcParser::FastBS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(Block, _impl_.hash_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 id = 1;
    {PROTOBUF_FIELD_OFFSET(Block, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 epochId = 2;
    {PROTOBUF_FIELD_OFFSET(Block, _impl_.epochid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .dataTypespb.Penny penny = 3;
    {PROTOBUF_FIELD_OFFSET(Block, _impl_.penny_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dataTypespb.Receipt receipt = 4;
    {PROTOBUF_FIELD_OFFSET(Block, _impl_.receipt_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .dataTypespb.Log logs = 5;
    {PROTOBUF_FIELD_OFFSET(Block, _impl_.logs_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes balance = 6;
    {PROTOBUF_FIELD_OFFSET(Block, _impl_.balance_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes hash = 7;
    {PROTOBUF_FIELD_OFFSET(Block, _impl_.hash_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint64 timeStamp = 8;
    {PROTOBUF_FIELD_OFFSET(Block, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::dataTypespb::Penny>()},
    {::_pbi::TcParser::GetTable<::dataTypespb::Receipt>()},
    {::_pbi::TcParser::GetTable<::dataTypespb::Log>()},
  }}, {{
  }},
};

::uint8_t* Block::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dataTypespb.Block)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_id(), target);
  }

  // uint64 epochId = 2;
  if (this->_internal_epochid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_epochid(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .dataTypespb.Penny penny = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.penny_, _impl_.penny_->GetCachedSize(), target, stream);
  }

  // .dataTypespb.Receipt receipt = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *_impl_.receipt_, _impl_.receipt_->GetCachedSize(), target, stream);
  }

  // repeated .dataTypespb.Log logs = 5;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_logs_size());
       i < n; i++) {
    const auto& repfield = this->_internal_logs().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // bytes balance = 6;
  if (!this->_internal_balance().empty()) {
    const std::string& _s = this->_internal_balance();
    target = stream->WriteBytesMaybeAliased(6, _s, target);
  }

  // bytes hash = 7;
  if (!this->_internal_hash().empty()) {
    const std::string& _s = this->_internal_hash();
    target = stream->WriteBytesMaybeAliased(7, _s, target);
  }

  // uint64 timeStamp = 8;
  if (this->_internal_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        8, this->_internal_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dataTypespb.Block)
  return target;
}

::size_t Block::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dataTypespb.Block)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .dataTypespb.Log logs = 5;
  total_size += 1UL * this->_internal_logs_size();
  for (const auto& msg : this->_internal_logs()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // bytes balance = 6;
  if (!this->_internal_balance().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_balance());
  }

  // bytes hash = 7;
  if (!this->_internal_hash().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_hash());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .dataTypespb.Penny penny = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.penny_);
    }

    // .dataTypespb.Receipt receipt = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.receipt_);
    }

  }
  // uint64 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_id());
  }

  // uint64 epochId = 2;
  if (this->_internal_epochid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_epochid());
  }

  // uint64 timeStamp = 8;
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Block::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Block*>(&to_msg);
  auto& from = static_cast<const Block&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dataTypespb.Block)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_logs()->MergeFrom(
      from._internal_logs());
  if (!from._internal_balance().empty()) {
    _this->_internal_set_balance(from._internal_balance());
  }
  if (!from._internal_hash().empty()) {
    _this->_internal_set_hash(from._internal_hash());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.penny_ != nullptr);
      if (_this->_impl_.penny_ == nullptr) {
        _this->_impl_.penny_ =
            ::google::protobuf::Message::CopyConstruct<::dataTypespb::Penny>(arena, *from._impl_.penny_);
      } else {
        _this->_impl_.penny_->MergeFrom(*from._impl_.penny_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.receipt_ != nullptr);
      if (_this->_impl_.receipt_ == nullptr) {
        _this->_impl_.receipt_ =
            ::google::protobuf::Message::CopyConstruct<::dataTypespb::Receipt>(arena, *from._impl_.receipt_);
      } else {
        _this->_impl_.receipt_->MergeFrom(*from._impl_.receipt_);
      }
    }
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_epochid() != 0) {
    _this->_impl_.epochid_ = from._impl_.epochid_;
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Block::CopyFrom(const Block& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dataTypespb.Block)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Block::IsInitialized() const {
  return true;
}

void Block::InternalSwap(Block* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.logs_.InternalSwap(&other->_impl_.logs_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.balance_, &other->_impl_.balance_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hash_, &other->_impl_.hash_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Block, _impl_.timestamp_)
      + sizeof(Block::_impl_.timestamp_)
      - PROTOBUF_FIELD_OFFSET(Block, _impl_.penny_)>(
          reinterpret_cast<char*>(&_impl_.penny_),
          reinterpret_cast<char*>(&other->_impl_.penny_));
}

::google::protobuf::Metadata Block::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_dataTypespb_2fdataTypes_2eproto_getter,
                                   &descriptor_table_dataTypespb_2fdataTypes_2eproto_once,
                                   file_level_metadata_dataTypespb_2fdataTypes_2eproto[1]);
}
// ===================================================================

class Blocks::_Internal {
 public:
};

Blocks::Blocks(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dataTypespb.Blocks)
}
inline PROTOBUF_NDEBUG_INLINE Blocks::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : list_{visibility, arena, from.list_},
        _cached_size_{0} {}

Blocks::Blocks(
    ::google::protobuf::Arena* arena,
    const Blocks& from)
    : ::google::protobuf::Message(arena) {
  Blocks* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:dataTypespb.Blocks)
}
inline PROTOBUF_NDEBUG_INLINE Blocks::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : list_{visibility, arena},
        _cached_size_{0} {}

inline void Blocks::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Blocks::~Blocks() {
  // @@protoc_insertion_point(destructor:dataTypespb.Blocks)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Blocks::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Blocks::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Blocks, _impl_._cached_size_),
              false,
          },
          &Blocks::MergeImpl,
          &Blocks::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void Blocks::Clear() {
// @@protoc_insertion_point(message_clear_start:dataTypespb.Blocks)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.list_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Blocks::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Blocks::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Blocks_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dataTypespb::Blocks>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .dataTypespb.Block list = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Blocks, _impl_.list_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .dataTypespb.Block list = 1;
    {PROTOBUF_FIELD_OFFSET(Blocks, _impl_.list_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::dataTypespb::Block>()},
  }}, {{
  }},
};

::uint8_t* Blocks::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dataTypespb.Blocks)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .dataTypespb.Block list = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_list_size());
       i < n; i++) {
    const auto& repfield = this->_internal_list().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dataTypespb.Blocks)
  return target;
}

::size_t Blocks::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dataTypespb.Blocks)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .dataTypespb.Block list = 1;
  total_size += 1UL * this->_internal_list_size();
  for (const auto& msg : this->_internal_list()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Blocks::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Blocks*>(&to_msg);
  auto& from = static_cast<const Blocks&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dataTypespb.Blocks)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_list()->MergeFrom(
      from._internal_list());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Blocks::CopyFrom(const Blocks& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dataTypespb.Blocks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Blocks::IsInitialized() const {
  return true;
}

void Blocks::InternalSwap(Blocks* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.list_.InternalSwap(&other->_impl_.list_);
}

::google::protobuf::Metadata Blocks::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_dataTypespb_2fdataTypes_2eproto_getter,
                                   &descriptor_table_dataTypespb_2fdataTypes_2eproto_once,
                                   file_level_metadata_dataTypespb_2fdataTypes_2eproto[2]);
}
// ===================================================================

class BlockHeader::_Internal {
 public:
};

BlockHeader::BlockHeader(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dataTypespb.BlockHeader)
}
inline PROTOBUF_NDEBUG_INLINE BlockHeader::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : loghashes_{visibility, arena, from.loghashes_},
        pennyhash_(arena, from.pennyhash_),
        receipthash_(arena, from.receipthash_),
        balance_(arena, from.balance_),
        hash_(arena, from.hash_),
        _cached_size_{0} {}

BlockHeader::BlockHeader(
    ::google::protobuf::Arena* arena,
    const BlockHeader& from)
    : ::google::protobuf::Message(arena) {
  BlockHeader* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, timestamp_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::timestamp_));

  // @@protoc_insertion_point(copy_constructor:dataTypespb.BlockHeader)
}
inline PROTOBUF_NDEBUG_INLINE BlockHeader::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : loghashes_{visibility, arena},
        pennyhash_(arena),
        receipthash_(arena),
        balance_(arena),
        hash_(arena),
        _cached_size_{0} {}

inline void BlockHeader::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, timestamp_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::timestamp_));
}
BlockHeader::~BlockHeader() {
  // @@protoc_insertion_point(destructor:dataTypespb.BlockHeader)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BlockHeader::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.pennyhash_.Destroy();
  _impl_.receipthash_.Destroy();
  _impl_.balance_.Destroy();
  _impl_.hash_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
BlockHeader::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_._cached_size_),
              false,
          },
          &BlockHeader::MergeImpl,
          &BlockHeader::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void BlockHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:dataTypespb.BlockHeader)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.loghashes_.Clear();
  _impl_.pennyhash_.ClearToEmpty();
  _impl_.receipthash_.ClearToEmpty();
  _impl_.balance_.ClearToEmpty();
  _impl_.hash_.ClearToEmpty();
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.timestamp_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.timestamp_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BlockHeader::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 0, 0, 2> BlockHeader::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_BlockHeader_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dataTypespb::BlockHeader>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 timestamp = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(BlockHeader, _impl_.timestamp_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.timestamp_)}},
    // uint64 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(BlockHeader, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.id_)}},
    // uint64 epochId = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(BlockHeader, _impl_.epochid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.epochid_)}},
    // bytes pennyHash = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.pennyhash_)}},
    // bytes receiptHash = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.receipthash_)}},
    // repeated bytes logHashes = 5;
    {::_pbi::TcParser::FastBR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.loghashes_)}},
    // bytes balance = 6;
    {::_pbi::TcParser::FastBS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.balance_)}},
    // bytes hash = 7;
    {::_pbi::TcParser::FastBS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.hash_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 id = 1;
    {PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 epochId = 2;
    {PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.epochid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // bytes pennyHash = 3;
    {PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.pennyhash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes receiptHash = 4;
    {PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.receipthash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated bytes logHashes = 5;
    {PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.loghashes_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
    // bytes balance = 6;
    {PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.balance_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes hash = 7;
    {PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.hash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint64 timestamp = 8;
    {PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* BlockHeader::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dataTypespb.BlockHeader)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_id(), target);
  }

  // uint64 epochId = 2;
  if (this->_internal_epochid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_epochid(), target);
  }

  // bytes pennyHash = 3;
  if (!this->_internal_pennyhash().empty()) {
    const std::string& _s = this->_internal_pennyhash();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  // bytes receiptHash = 4;
  if (!this->_internal_receipthash().empty()) {
    const std::string& _s = this->_internal_receipthash();
    target = stream->WriteBytesMaybeAliased(4, _s, target);
  }

  // repeated bytes logHashes = 5;
  for (int i = 0, n = this->_internal_loghashes_size(); i < n; ++i) {
    const auto& s = this->_internal_loghashes().Get(i);
    target = stream->WriteBytes(5, s, target);
  }

  // bytes balance = 6;
  if (!this->_internal_balance().empty()) {
    const std::string& _s = this->_internal_balance();
    target = stream->WriteBytesMaybeAliased(6, _s, target);
  }

  // bytes hash = 7;
  if (!this->_internal_hash().empty()) {
    const std::string& _s = this->_internal_hash();
    target = stream->WriteBytesMaybeAliased(7, _s, target);
  }

  // uint64 timestamp = 8;
  if (this->_internal_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        8, this->_internal_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dataTypespb.BlockHeader)
  return target;
}

::size_t BlockHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dataTypespb.BlockHeader)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes logHashes = 5;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_loghashes().size());
  for (int i = 0, n = _internal_loghashes().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
        _internal_loghashes().Get(i));
  }
  // bytes pennyHash = 3;
  if (!this->_internal_pennyhash().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_pennyhash());
  }

  // bytes receiptHash = 4;
  if (!this->_internal_receipthash().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_receipthash());
  }

  // bytes balance = 6;
  if (!this->_internal_balance().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_balance());
  }

  // bytes hash = 7;
  if (!this->_internal_hash().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_hash());
  }

  // uint64 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_id());
  }

  // uint64 epochId = 2;
  if (this->_internal_epochid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_epochid());
  }

  // uint64 timestamp = 8;
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void BlockHeader::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BlockHeader*>(&to_msg);
  auto& from = static_cast<const BlockHeader&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dataTypespb.BlockHeader)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_loghashes()->MergeFrom(from._internal_loghashes());
  if (!from._internal_pennyhash().empty()) {
    _this->_internal_set_pennyhash(from._internal_pennyhash());
  }
  if (!from._internal_receipthash().empty()) {
    _this->_internal_set_receipthash(from._internal_receipthash());
  }
  if (!from._internal_balance().empty()) {
    _this->_internal_set_balance(from._internal_balance());
  }
  if (!from._internal_hash().empty()) {
    _this->_internal_set_hash(from._internal_hash());
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_epochid() != 0) {
    _this->_impl_.epochid_ = from._impl_.epochid_;
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BlockHeader::CopyFrom(const BlockHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dataTypespb.BlockHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BlockHeader::IsInitialized() const {
  return true;
}

void BlockHeader::InternalSwap(BlockHeader* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.loghashes_.InternalSwap(&other->_impl_.loghashes_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.pennyhash_, &other->_impl_.pennyhash_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.receipthash_, &other->_impl_.receipthash_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.balance_, &other->_impl_.balance_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hash_, &other->_impl_.hash_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.timestamp_)
      + sizeof(BlockHeader::_impl_.timestamp_)
      - PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata BlockHeader::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_dataTypespb_2fdataTypes_2eproto_getter,
                                   &descriptor_table_dataTypespb_2fdataTypes_2eproto_once,
                                   file_level_metadata_dataTypespb_2fdataTypes_2eproto[3]);
}
// ===================================================================

class Penny::_Internal {
 public:
};

Penny::Penny(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dataTypespb.Penny)
}
inline PROTOBUF_NDEBUG_INLINE Penny::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : amount_(arena, from.amount_),
        sender_(arena, from.sender_),
        destination_(arena, from.destination_),
        data_(arena, from.data_),
        originchain_(arena, from.originchain_),
        destinationchain_(arena, from.destinationchain_),
        _cached_size_{0} {}

Penny::Penny(
    ::google::protobuf::Arena* arena,
    const Penny& from)
    : ::google::protobuf::Message(arena) {
  Penny* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, sendertransactionid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, sendertransactionid_),
           offsetof(Impl_, timestamp_) -
               offsetof(Impl_, sendertransactionid_) +
               sizeof(Impl_::timestamp_));

  // @@protoc_insertion_point(copy_constructor:dataTypespb.Penny)
}
inline PROTOBUF_NDEBUG_INLINE Penny::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : amount_(arena),
        sender_(arena),
        destination_(arena),
        data_(arena),
        originchain_(arena),
        destinationchain_(arena),
        _cached_size_{0} {}

inline void Penny::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, sendertransactionid_),
           0,
           offsetof(Impl_, timestamp_) -
               offsetof(Impl_, sendertransactionid_) +
               sizeof(Impl_::timestamp_));
}
Penny::~Penny() {
  // @@protoc_insertion_point(destructor:dataTypespb.Penny)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Penny::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.amount_.Destroy();
  _impl_.sender_.Destroy();
  _impl_.destination_.Destroy();
  _impl_.data_.Destroy();
  _impl_.originchain_.Destroy();
  _impl_.destinationchain_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Penny::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Penny, _impl_._cached_size_),
              false,
          },
          &Penny::MergeImpl,
          &Penny::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void Penny::Clear() {
// @@protoc_insertion_point(message_clear_start:dataTypespb.Penny)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.amount_.ClearToEmpty();
  _impl_.sender_.ClearToEmpty();
  _impl_.destination_.ClearToEmpty();
  _impl_.data_.ClearToEmpty();
  _impl_.originchain_.ClearToEmpty();
  _impl_.destinationchain_.ClearToEmpty();
  ::memset(&_impl_.sendertransactionid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.timestamp_) -
      reinterpret_cast<char*>(&_impl_.sendertransactionid_)) + sizeof(_impl_.timestamp_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Penny::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 8, 0, 0, 2> Penny::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966786,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Penny_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dataTypespb::Penny>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 senderTransactionId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Penny, _impl_.sendertransactionid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Penny, _impl_.sendertransactionid_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // bytes amount = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Penny, _impl_.amount_)}},
    // bytes sender = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Penny, _impl_.sender_)}},
    // bytes destination = 5;
    {::_pbi::TcParser::FastBS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Penny, _impl_.destination_)}},
    // bytes data = 6;
    {::_pbi::TcParser::FastBS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Penny, _impl_.data_)}},
    // uint64 timestamp = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Penny, _impl_.timestamp_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(Penny, _impl_.timestamp_)}},
    // bytes originChain = 8;
    {::_pbi::TcParser::FastBS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(Penny, _impl_.originchain_)}},
    // bytes destinationChain = 9;
    {::_pbi::TcParser::FastBS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(Penny, _impl_.destinationchain_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 senderTransactionId = 1;
    {PROTOBUF_FIELD_OFFSET(Penny, _impl_.sendertransactionid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // bytes amount = 3;
    {PROTOBUF_FIELD_OFFSET(Penny, _impl_.amount_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes sender = 4;
    {PROTOBUF_FIELD_OFFSET(Penny, _impl_.sender_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes destination = 5;
    {PROTOBUF_FIELD_OFFSET(Penny, _impl_.destination_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes data = 6;
    {PROTOBUF_FIELD_OFFSET(Penny, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint64 timestamp = 7;
    {PROTOBUF_FIELD_OFFSET(Penny, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // bytes originChain = 8;
    {PROTOBUF_FIELD_OFFSET(Penny, _impl_.originchain_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes destinationChain = 9;
    {PROTOBUF_FIELD_OFFSET(Penny, _impl_.destinationchain_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Penny::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dataTypespb.Penny)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 senderTransactionId = 1;
  if (this->_internal_sendertransactionid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_sendertransactionid(), target);
  }

  // bytes amount = 3;
  if (!this->_internal_amount().empty()) {
    const std::string& _s = this->_internal_amount();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  // bytes sender = 4;
  if (!this->_internal_sender().empty()) {
    const std::string& _s = this->_internal_sender();
    target = stream->WriteBytesMaybeAliased(4, _s, target);
  }

  // bytes destination = 5;
  if (!this->_internal_destination().empty()) {
    const std::string& _s = this->_internal_destination();
    target = stream->WriteBytesMaybeAliased(5, _s, target);
  }

  // bytes data = 6;
  if (!this->_internal_data().empty()) {
    const std::string& _s = this->_internal_data();
    target = stream->WriteBytesMaybeAliased(6, _s, target);
  }

  // uint64 timestamp = 7;
  if (this->_internal_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        7, this->_internal_timestamp(), target);
  }

  // bytes originChain = 8;
  if (!this->_internal_originchain().empty()) {
    const std::string& _s = this->_internal_originchain();
    target = stream->WriteBytesMaybeAliased(8, _s, target);
  }

  // bytes destinationChain = 9;
  if (!this->_internal_destinationchain().empty()) {
    const std::string& _s = this->_internal_destinationchain();
    target = stream->WriteBytesMaybeAliased(9, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dataTypespb.Penny)
  return target;
}

::size_t Penny::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dataTypespb.Penny)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes amount = 3;
  if (!this->_internal_amount().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_amount());
  }

  // bytes sender = 4;
  if (!this->_internal_sender().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_sender());
  }

  // bytes destination = 5;
  if (!this->_internal_destination().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_destination());
  }

  // bytes data = 6;
  if (!this->_internal_data().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_data());
  }

  // bytes originChain = 8;
  if (!this->_internal_originchain().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_originchain());
  }

  // bytes destinationChain = 9;
  if (!this->_internal_destinationchain().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_destinationchain());
  }

  // uint64 senderTransactionId = 1;
  if (this->_internal_sendertransactionid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_sendertransactionid());
  }

  // uint64 timestamp = 7;
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Penny::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Penny*>(&to_msg);
  auto& from = static_cast<const Penny&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dataTypespb.Penny)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_amount().empty()) {
    _this->_internal_set_amount(from._internal_amount());
  }
  if (!from._internal_sender().empty()) {
    _this->_internal_set_sender(from._internal_sender());
  }
  if (!from._internal_destination().empty()) {
    _this->_internal_set_destination(from._internal_destination());
  }
  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (!from._internal_originchain().empty()) {
    _this->_internal_set_originchain(from._internal_originchain());
  }
  if (!from._internal_destinationchain().empty()) {
    _this->_internal_set_destinationchain(from._internal_destinationchain());
  }
  if (from._internal_sendertransactionid() != 0) {
    _this->_impl_.sendertransactionid_ = from._impl_.sendertransactionid_;
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Penny::CopyFrom(const Penny& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dataTypespb.Penny)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Penny::IsInitialized() const {
  return true;
}

void Penny::InternalSwap(Penny* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.amount_, &other->_impl_.amount_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, &other->_impl_.sender_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.destination_, &other->_impl_.destination_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.originchain_, &other->_impl_.originchain_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.destinationchain_, &other->_impl_.destinationchain_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Penny, _impl_.timestamp_)
      + sizeof(Penny::_impl_.timestamp_)
      - PROTOBUF_FIELD_OFFSET(Penny, _impl_.sendertransactionid_)>(
          reinterpret_cast<char*>(&_impl_.sendertransactionid_),
          reinterpret_cast<char*>(&other->_impl_.sendertransactionid_));
}

::google::protobuf::Metadata Penny::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_dataTypespb_2fdataTypes_2eproto_getter,
                                   &descriptor_table_dataTypespb_2fdataTypes_2eproto_once,
                                   file_level_metadata_dataTypespb_2fdataTypes_2eproto[4]);
}
// ===================================================================

class PennyWithSenderHash::_Internal {
 public:
  using HasBits = decltype(std::declval<PennyWithSenderHash>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PennyWithSenderHash, _impl_._has_bits_);
};

PennyWithSenderHash::PennyWithSenderHash(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dataTypespb.PennyWithSenderHash)
}
inline PROTOBUF_NDEBUG_INLINE PennyWithSenderHash::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        senderblockhash_(arena, from.senderblockhash_) {}

PennyWithSenderHash::PennyWithSenderHash(
    ::google::protobuf::Arena* arena,
    const PennyWithSenderHash& from)
    : ::google::protobuf::Message(arena) {
  PennyWithSenderHash* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.penny_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::dataTypespb::Penny>(
                              arena, *from._impl_.penny_)
                        : nullptr;
  _impl_.senderepochid_ = from._impl_.senderepochid_;

  // @@protoc_insertion_point(copy_constructor:dataTypespb.PennyWithSenderHash)
}
inline PROTOBUF_NDEBUG_INLINE PennyWithSenderHash::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        senderblockhash_(arena) {}

inline void PennyWithSenderHash::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, penny_),
           0,
           offsetof(Impl_, senderepochid_) -
               offsetof(Impl_, penny_) +
               sizeof(Impl_::senderepochid_));
}
PennyWithSenderHash::~PennyWithSenderHash() {
  // @@protoc_insertion_point(destructor:dataTypespb.PennyWithSenderHash)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PennyWithSenderHash::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.senderblockhash_.Destroy();
  delete _impl_.penny_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
PennyWithSenderHash::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(PennyWithSenderHash, _impl_._cached_size_),
              false,
          },
          &PennyWithSenderHash::MergeImpl,
          &PennyWithSenderHash::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void PennyWithSenderHash::Clear() {
// @@protoc_insertion_point(message_clear_start:dataTypespb.PennyWithSenderHash)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.senderblockhash_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.penny_ != nullptr);
    _impl_.penny_->Clear();
  }
  _impl_.senderepochid_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PennyWithSenderHash::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> PennyWithSenderHash::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PennyWithSenderHash, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PennyWithSenderHash_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dataTypespb::PennyWithSenderHash>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .dataTypespb.Penny penny = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PennyWithSenderHash, _impl_.penny_)}},
    // bytes senderBlockHash = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PennyWithSenderHash, _impl_.senderblockhash_)}},
    // uint64 senderEpochId = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PennyWithSenderHash, _impl_.senderepochid_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(PennyWithSenderHash, _impl_.senderepochid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .dataTypespb.Penny penny = 1;
    {PROTOBUF_FIELD_OFFSET(PennyWithSenderHash, _impl_.penny_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes senderBlockHash = 2;
    {PROTOBUF_FIELD_OFFSET(PennyWithSenderHash, _impl_.senderblockhash_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint64 senderEpochId = 3;
    {PROTOBUF_FIELD_OFFSET(PennyWithSenderHash, _impl_.senderepochid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::dataTypespb::Penny>()},
  }}, {{
  }},
};

::uint8_t* PennyWithSenderHash::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dataTypespb.PennyWithSenderHash)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .dataTypespb.Penny penny = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.penny_, _impl_.penny_->GetCachedSize(), target, stream);
  }

  // bytes senderBlockHash = 2;
  if (!this->_internal_senderblockhash().empty()) {
    const std::string& _s = this->_internal_senderblockhash();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  // uint64 senderEpochId = 3;
  if (this->_internal_senderepochid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_senderepochid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dataTypespb.PennyWithSenderHash)
  return target;
}

::size_t PennyWithSenderHash::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dataTypespb.PennyWithSenderHash)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes senderBlockHash = 2;
  if (!this->_internal_senderblockhash().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_senderblockhash());
  }

  // .dataTypespb.Penny penny = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.penny_);
  }

  // uint64 senderEpochId = 3;
  if (this->_internal_senderepochid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_senderepochid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void PennyWithSenderHash::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PennyWithSenderHash*>(&to_msg);
  auto& from = static_cast<const PennyWithSenderHash&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dataTypespb.PennyWithSenderHash)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_senderblockhash().empty()) {
    _this->_internal_set_senderblockhash(from._internal_senderblockhash());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.penny_ != nullptr);
    if (_this->_impl_.penny_ == nullptr) {
      _this->_impl_.penny_ =
          ::google::protobuf::Message::CopyConstruct<::dataTypespb::Penny>(arena, *from._impl_.penny_);
    } else {
      _this->_impl_.penny_->MergeFrom(*from._impl_.penny_);
    }
  }
  if (from._internal_senderepochid() != 0) {
    _this->_impl_.senderepochid_ = from._impl_.senderepochid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PennyWithSenderHash::CopyFrom(const PennyWithSenderHash& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dataTypespb.PennyWithSenderHash)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PennyWithSenderHash::IsInitialized() const {
  return true;
}

void PennyWithSenderHash::InternalSwap(PennyWithSenderHash* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.senderblockhash_, &other->_impl_.senderblockhash_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PennyWithSenderHash, _impl_.senderepochid_)
      + sizeof(PennyWithSenderHash::_impl_.senderepochid_)
      - PROTOBUF_FIELD_OFFSET(PennyWithSenderHash, _impl_.penny_)>(
          reinterpret_cast<char*>(&_impl_.penny_),
          reinterpret_cast<char*>(&other->_impl_.penny_));
}

::google::protobuf::Metadata PennyWithSenderHash::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_dataTypespb_2fdataTypes_2eproto_getter,
                                   &descriptor_table_dataTypespb_2fdataTypes_2eproto_once,
                                   file_level_metadata_dataTypespb_2fdataTypes_2eproto[5]);
}
// ===================================================================

class Log::_Internal {
 public:
};

Log::Log(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dataTypespb.Log)
}
inline PROTOBUF_NDEBUG_INLINE Log::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : topics_{visibility, arena, from.topics_},
        address_(arena, from.address_),
        data_(arena, from.data_),
        _cached_size_{0} {}

Log::Log(
    ::google::protobuf::Arena* arena,
    const Log& from)
    : ::google::protobuf::Message(arena) {
  Log* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, transactionid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, transactionid_),
           offsetof(Impl_, index_) -
               offsetof(Impl_, transactionid_) +
               sizeof(Impl_::index_));

  // @@protoc_insertion_point(copy_constructor:dataTypespb.Log)
}
inline PROTOBUF_NDEBUG_INLINE Log::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : topics_{visibility, arena},
        address_(arena),
        data_(arena),
        _cached_size_{0} {}

inline void Log::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, transactionid_),
           0,
           offsetof(Impl_, index_) -
               offsetof(Impl_, transactionid_) +
               sizeof(Impl_::index_));
}
Log::~Log() {
  // @@protoc_insertion_point(destructor:dataTypespb.Log)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Log::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.address_.Destroy();
  _impl_.data_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Log::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Log, _impl_._cached_size_),
              false,
          },
          &Log::MergeImpl,
          &Log::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void Log::Clear() {
// @@protoc_insertion_point(message_clear_start:dataTypespb.Log)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.topics_.Clear();
  _impl_.address_.ClearToEmpty();
  _impl_.data_.ClearToEmpty();
  ::memset(&_impl_.transactionid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.index_) -
      reinterpret_cast<char*>(&_impl_.transactionid_)) + sizeof(_impl_.index_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Log::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> Log::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Log_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dataTypespb::Log>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes address = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Log, _impl_.address_)}},
    // uint64 transactionId = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Log, _impl_.transactionid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Log, _impl_.transactionid_)}},
    // uint32 index = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Log, _impl_.index_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Log, _impl_.index_)}},
    // repeated bytes topics = 4;
    {::_pbi::TcParser::FastBR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Log, _impl_.topics_)}},
    // bytes data = 5;
    {::_pbi::TcParser::FastBS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Log, _impl_.data_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes address = 1;
    {PROTOBUF_FIELD_OFFSET(Log, _impl_.address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint64 transactionId = 2;
    {PROTOBUF_FIELD_OFFSET(Log, _impl_.transactionid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint32 index = 3;
    {PROTOBUF_FIELD_OFFSET(Log, _impl_.index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated bytes topics = 4;
    {PROTOBUF_FIELD_OFFSET(Log, _impl_.topics_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
    // bytes data = 5;
    {PROTOBUF_FIELD_OFFSET(Log, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Log::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dataTypespb.Log)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes address = 1;
  if (!this->_internal_address().empty()) {
    const std::string& _s = this->_internal_address();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // uint64 transactionId = 2;
  if (this->_internal_transactionid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_transactionid(), target);
  }

  // uint32 index = 3;
  if (this->_internal_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_index(), target);
  }

  // repeated bytes topics = 4;
  for (int i = 0, n = this->_internal_topics_size(); i < n; ++i) {
    const auto& s = this->_internal_topics().Get(i);
    target = stream->WriteBytes(4, s, target);
  }

  // bytes data = 5;
  if (!this->_internal_data().empty()) {
    const std::string& _s = this->_internal_data();
    target = stream->WriteBytesMaybeAliased(5, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dataTypespb.Log)
  return target;
}

::size_t Log::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dataTypespb.Log)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes topics = 4;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_topics().size());
  for (int i = 0, n = _internal_topics().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
        _internal_topics().Get(i));
  }
  // bytes address = 1;
  if (!this->_internal_address().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_address());
  }

  // bytes data = 5;
  if (!this->_internal_data().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_data());
  }

  // uint64 transactionId = 2;
  if (this->_internal_transactionid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_transactionid());
  }

  // uint32 index = 3;
  if (this->_internal_index() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Log::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Log*>(&to_msg);
  auto& from = static_cast<const Log&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dataTypespb.Log)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_topics()->MergeFrom(from._internal_topics());
  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (from._internal_transactionid() != 0) {
    _this->_impl_.transactionid_ = from._impl_.transactionid_;
  }
  if (from._internal_index() != 0) {
    _this->_impl_.index_ = from._impl_.index_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Log::CopyFrom(const Log& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dataTypespb.Log)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Log::IsInitialized() const {
  return true;
}

void Log::InternalSwap(Log* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.topics_.InternalSwap(&other->_impl_.topics_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, &other->_impl_.address_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Log, _impl_.index_)
      + sizeof(Log::_impl_.index_)
      - PROTOBUF_FIELD_OFFSET(Log, _impl_.transactionid_)>(
          reinterpret_cast<char*>(&_impl_.transactionid_),
          reinterpret_cast<char*>(&other->_impl_.transactionid_));
}

::google::protobuf::Metadata Log::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_dataTypespb_2fdataTypes_2eproto_getter,
                                   &descriptor_table_dataTypespb_2fdataTypes_2eproto_once,
                                   file_level_metadata_dataTypespb_2fdataTypes_2eproto[6]);
}
// ===================================================================

class LogEntry::_Internal {
 public:
};

LogEntry::LogEntry(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dataTypespb.LogEntry)
}
inline PROTOBUF_NDEBUG_INLINE LogEntry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : topics_{visibility, arena, from.topics_},
        data_(arena, from.data_),
        _cached_size_{0} {}

LogEntry::LogEntry(
    ::google::protobuf::Arena* arena,
    const LogEntry& from)
    : ::google::protobuf::Message(arena) {
  LogEntry* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:dataTypespb.LogEntry)
}
inline PROTOBUF_NDEBUG_INLINE LogEntry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : topics_{visibility, arena},
        data_(arena),
        _cached_size_{0} {}

inline void LogEntry::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
LogEntry::~LogEntry() {
  // @@protoc_insertion_point(destructor:dataTypespb.LogEntry)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LogEntry::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.data_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
LogEntry::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(LogEntry, _impl_._cached_size_),
              false,
          },
          &LogEntry::MergeImpl,
          &LogEntry::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void LogEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:dataTypespb.LogEntry)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.topics_.Clear();
  _impl_.data_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* LogEntry::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> LogEntry::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_LogEntry_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dataTypespb::LogEntry>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes data = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(LogEntry, _impl_.data_)}},
    // repeated bytes topics = 1;
    {::_pbi::TcParser::FastBR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(LogEntry, _impl_.topics_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated bytes topics = 1;
    {PROTOBUF_FIELD_OFFSET(LogEntry, _impl_.topics_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
    // bytes data = 2;
    {PROTOBUF_FIELD_OFFSET(LogEntry, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* LogEntry::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dataTypespb.LogEntry)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated bytes topics = 1;
  for (int i = 0, n = this->_internal_topics_size(); i < n; ++i) {
    const auto& s = this->_internal_topics().Get(i);
    target = stream->WriteBytes(1, s, target);
  }

  // bytes data = 2;
  if (!this->_internal_data().empty()) {
    const std::string& _s = this->_internal_data();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dataTypespb.LogEntry)
  return target;
}

::size_t LogEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dataTypespb.LogEntry)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes topics = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_topics().size());
  for (int i = 0, n = _internal_topics().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
        _internal_topics().Get(i));
  }
  // bytes data = 2;
  if (!this->_internal_data().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_data());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void LogEntry::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LogEntry*>(&to_msg);
  auto& from = static_cast<const LogEntry&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dataTypespb.LogEntry)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_topics()->MergeFrom(from._internal_topics());
  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LogEntry::CopyFrom(const LogEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dataTypespb.LogEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LogEntry::IsInitialized() const {
  return true;
}

void LogEntry::InternalSwap(LogEntry* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.topics_.InternalSwap(&other->_impl_.topics_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
}

::google::protobuf::Metadata LogEntry::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_dataTypespb_2fdataTypes_2eproto_getter,
                                   &descriptor_table_dataTypespb_2fdataTypes_2eproto_once,
                                   file_level_metadata_dataTypespb_2fdataTypes_2eproto[7]);
}
// ===================================================================

class Logs::_Internal {
 public:
};

Logs::Logs(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dataTypespb.Logs)
}
inline PROTOBUF_NDEBUG_INLINE Logs::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : list_{visibility, arena, from.list_},
        _cached_size_{0} {}

Logs::Logs(
    ::google::protobuf::Arena* arena,
    const Logs& from)
    : ::google::protobuf::Message(arena) {
  Logs* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:dataTypespb.Logs)
}
inline PROTOBUF_NDEBUG_INLINE Logs::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : list_{visibility, arena},
        _cached_size_{0} {}

inline void Logs::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Logs::~Logs() {
  // @@protoc_insertion_point(destructor:dataTypespb.Logs)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Logs::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Logs::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Logs, _impl_._cached_size_),
              false,
          },
          &Logs::MergeImpl,
          &Logs::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void Logs::Clear() {
// @@protoc_insertion_point(message_clear_start:dataTypespb.Logs)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.list_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Logs::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Logs::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Logs_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dataTypespb::Logs>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .dataTypespb.Log list = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Logs, _impl_.list_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .dataTypespb.Log list = 1;
    {PROTOBUF_FIELD_OFFSET(Logs, _impl_.list_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::dataTypespb::Log>()},
  }}, {{
  }},
};

::uint8_t* Logs::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dataTypespb.Logs)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .dataTypespb.Log list = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_list_size());
       i < n; i++) {
    const auto& repfield = this->_internal_list().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dataTypespb.Logs)
  return target;
}

::size_t Logs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dataTypespb.Logs)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .dataTypespb.Log list = 1;
  total_size += 1UL * this->_internal_list_size();
  for (const auto& msg : this->_internal_list()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Logs::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Logs*>(&to_msg);
  auto& from = static_cast<const Logs&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dataTypespb.Logs)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_list()->MergeFrom(
      from._internal_list());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Logs::CopyFrom(const Logs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dataTypespb.Logs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Logs::IsInitialized() const {
  return true;
}

void Logs::InternalSwap(Logs* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.list_.InternalSwap(&other->_impl_.list_);
}

::google::protobuf::Metadata Logs::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_dataTypespb_2fdataTypes_2eproto_getter,
                                   &descriptor_table_dataTypespb_2fdataTypes_2eproto_once,
                                   file_level_metadata_dataTypespb_2fdataTypes_2eproto[8]);
}
// ===================================================================

class Receipt::_Internal {
 public:
};

Receipt::Receipt(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dataTypespb.Receipt)
}
inline PROTOBUF_NDEBUG_INLINE Receipt::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : logs_{visibility, arena, from.logs_},
        contractaddress_(arena, from.contractaddress_),
        _cached_size_{0} {}

Receipt::Receipt(
    ::google::protobuf::Arena* arena,
    const Receipt& from)
    : ::google::protobuf::Message(arena) {
  Receipt* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gasused_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, gasused_),
           offsetof(Impl_, status_) -
               offsetof(Impl_, gasused_) +
               sizeof(Impl_::status_));

  // @@protoc_insertion_point(copy_constructor:dataTypespb.Receipt)
}
inline PROTOBUF_NDEBUG_INLINE Receipt::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : logs_{visibility, arena},
        contractaddress_(arena),
        _cached_size_{0} {}

inline void Receipt::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gasused_),
           0,
           offsetof(Impl_, status_) -
               offsetof(Impl_, gasused_) +
               sizeof(Impl_::status_));
}
Receipt::~Receipt() {
  // @@protoc_insertion_point(destructor:dataTypespb.Receipt)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Receipt::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.contractaddress_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Receipt::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Receipt, _impl_._cached_size_),
              false,
          },
          &Receipt::MergeImpl,
          &Receipt::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void Receipt::Clear() {
// @@protoc_insertion_point(message_clear_start:dataTypespb.Receipt)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.logs_.Clear();
  _impl_.contractaddress_.ClearToEmpty();
  ::memset(&_impl_.gasused_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.status_) -
      reinterpret_cast<char*>(&_impl_.gasused_)) + sizeof(_impl_.status_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Receipt::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> Receipt::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Receipt_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dataTypespb::Receipt>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .dataTypespb.Log logs = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Receipt, _impl_.logs_)}},
    // bytes contractAddress = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Receipt, _impl_.contractaddress_)}},
    // bool status = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Receipt, _impl_.status_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Receipt, _impl_.status_)}},
    // uint64 gasUsed = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Receipt, _impl_.gasused_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Receipt, _impl_.gasused_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes contractAddress = 1;
    {PROTOBUF_FIELD_OFFSET(Receipt, _impl_.contractaddress_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bool status = 2;
    {PROTOBUF_FIELD_OFFSET(Receipt, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // uint64 gasUsed = 3;
    {PROTOBUF_FIELD_OFFSET(Receipt, _impl_.gasused_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // repeated .dataTypespb.Log logs = 4;
    {PROTOBUF_FIELD_OFFSET(Receipt, _impl_.logs_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::dataTypespb::Log>()},
  }}, {{
  }},
};

::uint8_t* Receipt::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dataTypespb.Receipt)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes contractAddress = 1;
  if (!this->_internal_contractaddress().empty()) {
    const std::string& _s = this->_internal_contractaddress();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // bool status = 2;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_status(), target);
  }

  // uint64 gasUsed = 3;
  if (this->_internal_gasused() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_gasused(), target);
  }

  // repeated .dataTypespb.Log logs = 4;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_logs_size());
       i < n; i++) {
    const auto& repfield = this->_internal_logs().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            4, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dataTypespb.Receipt)
  return target;
}

::size_t Receipt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dataTypespb.Receipt)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .dataTypespb.Log logs = 4;
  total_size += 1UL * this->_internal_logs_size();
  for (const auto& msg : this->_internal_logs()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // bytes contractAddress = 1;
  if (!this->_internal_contractaddress().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_contractaddress());
  }

  // uint64 gasUsed = 3;
  if (this->_internal_gasused() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_gasused());
  }

  // bool status = 2;
  if (this->_internal_status() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Receipt::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Receipt*>(&to_msg);
  auto& from = static_cast<const Receipt&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dataTypespb.Receipt)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_logs()->MergeFrom(
      from._internal_logs());
  if (!from._internal_contractaddress().empty()) {
    _this->_internal_set_contractaddress(from._internal_contractaddress());
  }
  if (from._internal_gasused() != 0) {
    _this->_impl_.gasused_ = from._impl_.gasused_;
  }
  if (from._internal_status() != 0) {
    _this->_impl_.status_ = from._impl_.status_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Receipt::CopyFrom(const Receipt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dataTypespb.Receipt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Receipt::IsInitialized() const {
  return true;
}

void Receipt::InternalSwap(Receipt* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.logs_.InternalSwap(&other->_impl_.logs_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.contractaddress_, &other->_impl_.contractaddress_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Receipt, _impl_.status_)
      + sizeof(Receipt::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(Receipt, _impl_.gasused_)>(
          reinterpret_cast<char*>(&_impl_.gasused_),
          reinterpret_cast<char*>(&other->_impl_.gasused_));
}

::google::protobuf::Metadata Receipt::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_dataTypespb_2fdataTypes_2eproto_getter,
                                   &descriptor_table_dataTypespb_2fdataTypes_2eproto_once,
                                   file_level_metadata_dataTypespb_2fdataTypes_2eproto[9]);
}
// ===================================================================

class Receipts::_Internal {
 public:
};

Receipts::Receipts(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dataTypespb.Receipts)
}
inline PROTOBUF_NDEBUG_INLINE Receipts::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : list_{visibility, arena, from.list_},
        _cached_size_{0} {}

Receipts::Receipts(
    ::google::protobuf::Arena* arena,
    const Receipts& from)
    : ::google::protobuf::Message(arena) {
  Receipts* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:dataTypespb.Receipts)
}
inline PROTOBUF_NDEBUG_INLINE Receipts::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : list_{visibility, arena},
        _cached_size_{0} {}

inline void Receipts::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Receipts::~Receipts() {
  // @@protoc_insertion_point(destructor:dataTypespb.Receipts)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Receipts::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Receipts::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Receipts, _impl_._cached_size_),
              false,
          },
          &Receipts::MergeImpl,
          &Receipts::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void Receipts::Clear() {
// @@protoc_insertion_point(message_clear_start:dataTypespb.Receipts)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.list_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Receipts::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Receipts::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Receipts_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dataTypespb::Receipts>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .dataTypespb.Receipt list = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Receipts, _impl_.list_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .dataTypespb.Receipt list = 1;
    {PROTOBUF_FIELD_OFFSET(Receipts, _impl_.list_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::dataTypespb::Receipt>()},
  }}, {{
  }},
};

::uint8_t* Receipts::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dataTypespb.Receipts)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .dataTypespb.Receipt list = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_list_size());
       i < n; i++) {
    const auto& repfield = this->_internal_list().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dataTypespb.Receipts)
  return target;
}

::size_t Receipts::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dataTypespb.Receipts)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .dataTypespb.Receipt list = 1;
  total_size += 1UL * this->_internal_list_size();
  for (const auto& msg : this->_internal_list()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Receipts::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Receipts*>(&to_msg);
  auto& from = static_cast<const Receipts&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dataTypespb.Receipts)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_list()->MergeFrom(
      from._internal_list());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Receipts::CopyFrom(const Receipts& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dataTypespb.Receipts)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Receipts::IsInitialized() const {
  return true;
}

void Receipts::InternalSwap(Receipts* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.list_.InternalSwap(&other->_impl_.list_);
}

::google::protobuf::Metadata Receipts::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_dataTypespb_2fdataTypes_2eproto_getter,
                                   &descriptor_table_dataTypespb_2fdataTypes_2eproto_once,
                                   file_level_metadata_dataTypespb_2fdataTypes_2eproto[10]);
}
// ===================================================================

class ReceiptHeader::_Internal {
 public:
};

ReceiptHeader::ReceiptHeader(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dataTypespb.ReceiptHeader)
}
inline PROTOBUF_NDEBUG_INLINE ReceiptHeader::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : loghashes_{visibility, arena, from.loghashes_},
        contractaddress_(arena, from.contractaddress_),
        _cached_size_{0} {}

ReceiptHeader::ReceiptHeader(
    ::google::protobuf::Arena* arena,
    const ReceiptHeader& from)
    : ::google::protobuf::Message(arena) {
  ReceiptHeader* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gasused_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, gasused_),
           offsetof(Impl_, status_) -
               offsetof(Impl_, gasused_) +
               sizeof(Impl_::status_));

  // @@protoc_insertion_point(copy_constructor:dataTypespb.ReceiptHeader)
}
inline PROTOBUF_NDEBUG_INLINE ReceiptHeader::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : loghashes_{visibility, arena},
        contractaddress_(arena),
        _cached_size_{0} {}

inline void ReceiptHeader::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gasused_),
           0,
           offsetof(Impl_, status_) -
               offsetof(Impl_, gasused_) +
               sizeof(Impl_::status_));
}
ReceiptHeader::~ReceiptHeader() {
  // @@protoc_insertion_point(destructor:dataTypespb.ReceiptHeader)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ReceiptHeader::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.contractaddress_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ReceiptHeader::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(ReceiptHeader, _impl_._cached_size_),
              false,
          },
          &ReceiptHeader::MergeImpl,
          &ReceiptHeader::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void ReceiptHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:dataTypespb.ReceiptHeader)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.loghashes_.Clear();
  _impl_.contractaddress_.ClearToEmpty();
  ::memset(&_impl_.gasused_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.status_) -
      reinterpret_cast<char*>(&_impl_.gasused_)) + sizeof(_impl_.status_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ReceiptHeader::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> ReceiptHeader::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ReceiptHeader_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dataTypespb::ReceiptHeader>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated bytes logHashes = 4;
    {::_pbi::TcParser::FastBR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ReceiptHeader, _impl_.loghashes_)}},
    // bytes contractAddress = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ReceiptHeader, _impl_.contractaddress_)}},
    // bool status = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ReceiptHeader, _impl_.status_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ReceiptHeader, _impl_.status_)}},
    // uint64 gasUsed = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ReceiptHeader, _impl_.gasused_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(ReceiptHeader, _impl_.gasused_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes contractAddress = 1;
    {PROTOBUF_FIELD_OFFSET(ReceiptHeader, _impl_.contractaddress_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bool status = 2;
    {PROTOBUF_FIELD_OFFSET(ReceiptHeader, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // uint64 gasUsed = 3;
    {PROTOBUF_FIELD_OFFSET(ReceiptHeader, _impl_.gasused_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // repeated bytes logHashes = 4;
    {PROTOBUF_FIELD_OFFSET(ReceiptHeader, _impl_.loghashes_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ReceiptHeader::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dataTypespb.ReceiptHeader)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes contractAddress = 1;
  if (!this->_internal_contractaddress().empty()) {
    const std::string& _s = this->_internal_contractaddress();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // bool status = 2;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_status(), target);
  }

  // uint64 gasUsed = 3;
  if (this->_internal_gasused() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_gasused(), target);
  }

  // repeated bytes logHashes = 4;
  for (int i = 0, n = this->_internal_loghashes_size(); i < n; ++i) {
    const auto& s = this->_internal_loghashes().Get(i);
    target = stream->WriteBytes(4, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dataTypespb.ReceiptHeader)
  return target;
}

::size_t ReceiptHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dataTypespb.ReceiptHeader)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes logHashes = 4;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_loghashes().size());
  for (int i = 0, n = _internal_loghashes().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
        _internal_loghashes().Get(i));
  }
  // bytes contractAddress = 1;
  if (!this->_internal_contractaddress().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_contractaddress());
  }

  // uint64 gasUsed = 3;
  if (this->_internal_gasused() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_gasused());
  }

  // bool status = 2;
  if (this->_internal_status() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ReceiptHeader::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ReceiptHeader*>(&to_msg);
  auto& from = static_cast<const ReceiptHeader&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dataTypespb.ReceiptHeader)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_loghashes()->MergeFrom(from._internal_loghashes());
  if (!from._internal_contractaddress().empty()) {
    _this->_internal_set_contractaddress(from._internal_contractaddress());
  }
  if (from._internal_gasused() != 0) {
    _this->_impl_.gasused_ = from._impl_.gasused_;
  }
  if (from._internal_status() != 0) {
    _this->_impl_.status_ = from._impl_.status_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ReceiptHeader::CopyFrom(const ReceiptHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dataTypespb.ReceiptHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ReceiptHeader::IsInitialized() const {
  return true;
}

void ReceiptHeader::InternalSwap(ReceiptHeader* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.loghashes_.InternalSwap(&other->_impl_.loghashes_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.contractaddress_, &other->_impl_.contractaddress_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReceiptHeader, _impl_.status_)
      + sizeof(ReceiptHeader::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(ReceiptHeader, _impl_.gasused_)>(
          reinterpret_cast<char*>(&_impl_.gasused_),
          reinterpret_cast<char*>(&other->_impl_.gasused_));
}

::google::protobuf::Metadata ReceiptHeader::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_dataTypespb_2fdataTypes_2eproto_getter,
                                   &descriptor_table_dataTypespb_2fdataTypes_2eproto_once,
                                   file_level_metadata_dataTypespb_2fdataTypes_2eproto[11]);
}
// ===================================================================

class TransientNonce::_Internal {
 public:
};

TransientNonce::TransientNonce(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dataTypespb.TransientNonce)
}
TransientNonce::TransientNonce(
    ::google::protobuf::Arena* arena, const TransientNonce& from)
    : TransientNonce(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE TransientNonce::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TransientNonce::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.nonce_ = {};
}
TransientNonce::~TransientNonce() {
  // @@protoc_insertion_point(destructor:dataTypespb.TransientNonce)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TransientNonce::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
TransientNonce::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(TransientNonce, _impl_._cached_size_),
              false,
          },
          &TransientNonce::MergeImpl,
          &TransientNonce::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void TransientNonce::Clear() {
// @@protoc_insertion_point(message_clear_start:dataTypespb.TransientNonce)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nonce_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TransientNonce::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> TransientNonce::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TransientNonce_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dataTypespb::TransientNonce>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 nonce = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TransientNonce, _impl_.nonce_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TransientNonce, _impl_.nonce_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 nonce = 1;
    {PROTOBUF_FIELD_OFFSET(TransientNonce, _impl_.nonce_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TransientNonce::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dataTypespb.TransientNonce)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 nonce = 1;
  if (this->_internal_nonce() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_nonce(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dataTypespb.TransientNonce)
  return target;
}

::size_t TransientNonce::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dataTypespb.TransientNonce)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 nonce = 1;
  if (this->_internal_nonce() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_nonce());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void TransientNonce::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TransientNonce*>(&to_msg);
  auto& from = static_cast<const TransientNonce&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dataTypespb.TransientNonce)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_nonce() != 0) {
    _this->_impl_.nonce_ = from._impl_.nonce_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TransientNonce::CopyFrom(const TransientNonce& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dataTypespb.TransientNonce)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TransientNonce::IsInitialized() const {
  return true;
}

void TransientNonce::InternalSwap(TransientNonce* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.nonce_, other->_impl_.nonce_);
}

::google::protobuf::Metadata TransientNonce::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_dataTypespb_2fdataTypes_2eproto_getter,
                                   &descriptor_table_dataTypespb_2fdataTypes_2eproto_once,
                                   file_level_metadata_dataTypespb_2fdataTypes_2eproto[12]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace dataTypespb
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_dataTypespb_2fdataTypes_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
